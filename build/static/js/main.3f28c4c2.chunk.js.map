{"version":3,"sources":["actions/index.js","actions/actionTypes.js","pages/login/styles.js","pages/login/login.js","components/todoItem/styles.js","components/todoItem/todoItem.js","components/gridList/style.js","components/gridList/gridList.js","components/dialog/dialog.js","pages/todo/styles.js","pages/todo/todo.js","serviceWorker.js","reducers/loginReducer.js","reducers/todoReducer.js","reducers/index.js","store/index.js","index.js"],"names":["sendLogin","value","type","payload","sendTodo","deleteTodo","completeTodo","CredentialsContainer","styled","div","TypistContainer","CssContainer","withStyles","root","alignItems","display","justifyContent","height","Container","CssTextField","opacity","position","top","color","borderColor","borderBottomColor","margin","TextField","CssButton","marginTop","Button","withRouter","connect","store","dispatch","bindActionCreators","props","useState","username","credentials","setCredentials","error","setError","cursor","show","id","label","onChange","e","target","name","onBlur","autoComplete","helperText","onClick","history","push","loginHandler","variant","TodoTitle","p","Box","TodoItem","title","todoDetail","index","ColumnContainer","flexDirection","marginLeft","overflow","maxHeight","width","background","gridList","children","DialogTitle","theme","padding","spacing","closeButton","right","palette","grey","typoRoot","marginRight","classes","onClose","other","disableTypography","className","Typography","IconButton","aria-label","DialogContent","MuiDialogContent","CustomizedDialogs","open","handleClose","description","Dialog","aria-labelledby","dividers","gutterBottom","TodoContainer","Division","WelcomeMessage","todoList","todoState","todos","deleteCount","completedCount","loginState","login","todoValue","setTodoValue","modal","todoModal","setTodoModal","onChangeHandler","TodoList","map","todo","key","todoIndex","filter","todoItem","deleteTodoHandler","completeTodoHandler","inputTodoToModal","todoDetailHandler","multiline","rows","Boolean","window","location","hostname","match","initialState","Reducers","combineReducers","state","action","reducer","storage","engine","createEngine","middleware","Store","applyMiddleware","createStore","createStoreWithMiddleware","load","ReactDOM","render","StrictMode","path","exact","component","Login","Todo","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3f28c4c2.chunk.js","sourcesContent":["import {\n  CLICK_TO_SEND_LOGIN,\n  CLICK_TO_ADD_TODO,\n  CLICK_TO_DELETE_TODO,\n  CLICK_TO_COMPLETE_TODO,\n} from \"./actionTypes\";\n\nexport const sendLogin = (value) => ({\n  type: CLICK_TO_SEND_LOGIN,\n  payload: value,\n});\n\nexport const sendTodo = (value) => ({\n  type: CLICK_TO_ADD_TODO,\n  payload: value,\n});\n\nexport const deleteTodo = (value) => ({\n  type: CLICK_TO_DELETE_TODO,\n  payload: value,\n});\n\nexport const completeTodo = (value) => ({\n  type: CLICK_TO_COMPLETE_TODO,\n  payload: value,\n});\n","export const CLICK_TO_SEND_LOGIN = \"CLICK_TO_SEND_LOGIN\";\n\nexport const CLICK_TO_ADD_TODO = \"CLICK_TO_ADD_TODO\";\n\nexport const CLICK_TO_DELETE_TODO = \"CLICK_TO_DELETE_TODO\";\n\nexport const CLICK_TO_COMPLETE_TODO = \"CLICK_TO_COMPLETE_TODO\";\n","import styled from \"styled-components\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Container, TextField, Button } from \"@material-ui/core\";\n\nexport const CredentialsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 50%;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n`;\n\nexport const TypistContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const CssContainer = withStyles({\n  root: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n  },\n})(Container);\n\nexport const CssTextField = withStyles({\n  root: {\n    \"& .MuiFormHelperText-root.Mui-error\": {\n      opacity: 1,\n      position: \"absolute\",\n      top: \"50px\",\n    },\n    \"& .Mui-error\": {\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& label.Mui-error\": {\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& label.Mui-focused.Mui-error\": {\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& .MuiInput-root:hover::before\": {\n      borderColor: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& label.Mui-focused\": {\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"rgba(0, 0, 0, 0.54)\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"rgba(0, 0, 0, 0.54)\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"rgba(0, 0, 0, 0.54)\",\n      },\n    },\n    margin: \"10px 0\",\n  },\n})(TextField);\n\nexport const CssButton = withStyles({\n  root: {\n    marginTop: \"20px\",\n  },\n})(Button);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { sendLogin } from \"../../actions\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  CredentialsContainer,\n  CssContainer,\n  TypistContainer,\n  CssTextField,\n  CssButton,\n} from \"./styles\";\nimport Typist from \"react-typist\";\n\nconst Login = (props) => {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n  });\n\n  const [error, setError] = useState(false);\n\n  const onChangeHandler = (e) => {\n    if (error) {\n      setError(false);\n    }\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const loginHandler = (username) => {\n    if (!error) {\n      const { sendLogin, history } = props;\n      sendLogin(username);\n      history.push(\"/Todo\");\n    } else {\n      setError(true);\n    }\n  };\n\n  const validationHandler = (e) => {\n    if (!e.target.value) {\n      setError(true);\n    }\n  };\n\n  return (\n    <CssContainer>\n      <CredentialsContainer>\n        <TypistContainer>\n          <Typist cursor={{ show: false }}>A minimalist todo app...</Typist>\n        </TypistContainer>\n        <CssTextField\n          id=\"usernameInput\"\n          label=\"username\"\n          onChange={onChangeHandler}\n          value={credentials.username}\n          name=\"username\"\n          onBlur={validationHandler}\n          autoComplete=\"off\"\n          error={error}\n          helperText={error ? \"this input cannot be empty\" : \"\"}\n        />\n        <CssButton onClick={() => loginHandler(credentials)} variant=\"outlined\">\n          NEXT\n        </CssButton>\n      </CredentialsContainer>\n    </CssContainer>\n  );\n};\n\nconst mapStateToProps = (store) => ({});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ sendLogin }, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n","import styled from \"styled-components\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Box, TextField, Button } from \"@material-ui/core\";\n\nexport const CredentialsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 50%;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n`;\n\nexport const TypistContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const TodoTitle = styled.p`\n    font-size: 18px;\n`;\n\nexport const CssContainer = withStyles({\n  root: {\n    display: \"inline-flex\",\n  },\n})(Box);\n\nexport const CssTextField = withStyles({\n  root: {\n    \"& .MuiInput-root:hover::before\": {\n      borderColor: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& label.Mui-focused\": {\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"rgba(0, 0, 0, 0.54)\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"rgba(0, 0, 0, 0.54)\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"rgba(0, 0, 0, 0.54)\",\n      },\n    },\n    margin: \"10px 0\",\n  },\n})(TextField);\n\nexport const CssButton = withStyles({\n  root: {},\n})(Button);\n","import React from \"react\";\nimport { CssContainer, CssButton, TodoTitle } from \"./styles\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\n\nconst TodoItem = (props) => {\n  const { title, deleteTodo, completeTodo, todoDetail, index } = props;\n  return (\n    <CssContainer>\n      <CssButton onClick={deleteTodo}>\n        <DeleteOutlineIcon />\n      </CssButton>\n      <CssButton onClick={completeTodo}>\n        <CheckIcon />\n      </CssButton>\n      <CssButton onClick={todoDetail}>\n        <DetailsIcon />\n      </CssButton>\n      <TodoTitle>{`${index + 1} - ${title}`}</TodoTitle>\n    </CssContainer>\n  );\n};\n\nexport default TodoItem;\n","import { withStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\nexport const ColumnContainer = withStyles({\n  root: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginLeft: \"-25px\",\n    overflow: \"auto\",\n    maxHeight: \"171px\",\n    \"&:hover\": {},\n    \"&::-webkit-scrollbar\": {\n      width: \"5px\",\n    },\n    \"&::-webkit-scrollbar-track\": {\n      background: \"#f1f1f1\",\n    },\n    \"&::-webkit-scrollbar-thumb\": {\n      background: \"#888\",\n    },\n    \"&::-webkit-scrollbar-thumb:hover\": {\n      background: \"#555\",\n    },\n  },\n})(Box);\n","import React from \"react\";\nimport { ColumnContainer } from \"./style\";\n\nconst gridList = (props) => {\n  return <ColumnContainer>{props.children}</ColumnContainer>;\n};\n\nexport default gridList;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  typoRoot: {\n    marginRight: \"50px\",\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography className={classes.typoRoot} variant=\"h6\">\n        {children}\n      </Typography>\n      <IconButton\n        aria-label=\"close\"\n        className={classes.closeButton}\n        onClick={onClose}\n      >\n        <CloseIcon />\n      </IconButton>\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst CustomizedDialogs = (props) => {\n  const { open, handleClose, title, description } = props;\n  return (\n    <div>\n      <Dialog aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {title}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>{description}</Typography>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomizedDialogs;\n","import styled from \"styled-components\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Container, TextField, Button } from \"@material-ui/core\";\n\nexport const TodoContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const Division = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  @media (min-width: 767px) {\n    width: 440px;\n    height: 250px;\n  }\n`;\n\nexport const TodoDivision = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const WelcomeMessage = styled.p`\n  text-align: center;\n  line-height: 24px;\n`;\n\nexport const CssContainer = withStyles({\n  root: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n  },\n})(Container);\n\nexport const CssTextField = withStyles({\n  root: {\n    \"& .MuiInput-root:hover::before\": {\n      borderColor: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& label.Mui-focused\": {\n      color: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"rgba(0, 0, 0, 0.54)\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"rgba(0, 0, 0, 0.54)\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"rgba(0, 0, 0, 0.54)\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"rgba(0, 0, 0, 0.54)\",\n      },\n    },\n    margin: \"10px 0\",\n  },\n})(TextField);\n\nexport const CssButton = withStyles({\n  root: {\n    marginTop: \"20px\",\n  },\n})(Button);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { sendTodo, deleteTodo, completeTodo } from \"../../actions\";\nimport { withRouter } from \"react-router-dom\";\nimport TodoItem from \"../../components/todoItem/todoItem\";\nimport GridList from \"../../components/gridList/gridList\";\nimport Dialog from \"../../components/dialog/dialog\";\nimport {\n  CssContainer,\n  CssTextField,\n  TodoContainer,\n  CssButton,\n  WelcomeMessage,\n  Division,\n} from \"./styles\";\n\nconst Todo = (props) => {\n  const { username, deleteCount, completedCount } = props;\n\n  const [todoValue, setTodoValue] = useState({\n    title: \"\",\n    description: \"\",\n  });\n\n  const [todoModal, setTodoModal] = useState({\n    title: \"\",\n    description: \"\",\n    modal: false,\n  });\n\n  const onChangeHandler = (e) => {\n    setTodoValue({ ...todoValue, [e.target.name]: e.target.value });\n  };\n\n  const sendTodoHandler = () => {\n    const { sendTodo } = props;\n    sendTodo(todoValue);\n  };\n\n  const deleteTodoHandler = (todoIndex) => {\n    const { todoList, deleteTodo } = props;\n    const newTodoList = todoList.filter(\n      (todoItem, index) => index !== todoIndex\n    );\n    deleteTodo(newTodoList);\n  };\n\n  const completeTodoHandler = (todoIndex) => {\n    const { todoList, completeTodo } = props;\n    const newTodoList = todoList.filter(\n      (todoItem, index) => index !== todoIndex\n    );\n    completeTodo(newTodoList);\n  };\n\n  const todoDetailHandler = (todoIndex) => {\n    const { todoList } = props;\n    const inputTodoToModal = todoList.filter(\n      (todoItem, index) => index === todoIndex\n    );\n    setTodoModal({\n      title: inputTodoToModal[0].title,\n      description: inputTodoToModal[0].description,\n      modal: true,\n    });\n  };\n\n  const handleClickModal = () => {\n    setTodoModal({\n      modal: false,\n    });\n  };\n\n  const TodoList = props.todoList.map((todo, index) => (\n    <TodoItem\n      key={index}\n      index={index}\n      title={todo.title}\n      deleteTodo={() => deleteTodoHandler(index)}\n      completeTodo={() => completeTodoHandler(index)}\n      todoDetail={() => todoDetailHandler(index)}\n    />\n  ));\n\n  return (\n    <CssContainer>\n      <TodoContainer>\n        <WelcomeMessage>\n          {username}, what we are going to do today? <br />\n          deleted: {deleteCount} completed: {completedCount}\n        </WelcomeMessage>\n        <GridList>{TodoList}</GridList>\n        <Division>\n          <CssTextField\n            id=\"titleInput\"\n            label=\"title\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={todoValue.title}\n            onChange={onChangeHandler}\n          />\n          <CssTextField\n            id=\"descriptionInput\"\n            label=\"description\"\n            name=\"description\"\n            autoComplete=\"off\"\n            multiline\n            rows=\"4\"\n            value={todoValue.description}\n            onChange={onChangeHandler}\n          />\n          <CssButton\n            onClick={() => sendTodoHandler(todoValue)}\n            variant=\"outlined\"\n          >\n            ADD\n          </CssButton>\n        </Division>\n      </TodoContainer>\n      <Dialog\n        open={todoModal.modal}\n        handleClose={handleClickModal}\n        title={todoModal.title}\n        description={todoModal.description}\n      />\n    </CssContainer>\n  );\n};\n\nconst mapStateToProps = (store) => ({\n  todoList: store.todoState.todos,\n  deleteCount: store.todoState.deleteCount,\n  completedCount: store.todoState.completedCount,\n  username: store.loginState.login.username,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators({ sendTodo, deleteTodo, completeTodo }, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Todo));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CLICK_TO_SEND_LOGIN } from \"../actions/actionTypes\";\n\nconst initialState = {\n  login: {\n    username: \"\"\n  }\n};\n\nexport const loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CLICK_TO_SEND_LOGIN: {\n      return {\n        ...state,\n        login: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  CLICK_TO_ADD_TODO,\n  CLICK_TO_DELETE_TODO,\n  CLICK_TO_COMPLETE_TODO,\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  todos: [],\n  deleteCount: 0,\n  completedCount: 0,\n};\n\nexport const todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CLICK_TO_ADD_TODO: {\n      return {\n        ...state,\n        todos: [...state.todos, action.payload],\n      };\n    }\n    case CLICK_TO_DELETE_TODO: {\n      return {\n        ...state,\n        todos: action.payload,\n        deleteCount: state.deleteCount + 1,\n      };\n    }\n    case CLICK_TO_COMPLETE_TODO: {\n      return {\n        ...state,\n        todos: action.payload,\n        completedCount: state.completedCount + 1,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { loginReducer } from \"./loginReducer\";\nimport { todoReducer } from \"./todoReducer\";\nimport { combineReducers } from \"redux\";\n\nexport const Reducers = combineReducers({\n  loginState: loginReducer,\n  todoState: todoReducer,\n});\n","import * as storage from \"redux-storage\";\nimport createEngine from \"redux-storage-engine-localstorage\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Reducers } from \"../reducers\";\n\nconst reducer = storage.reducer(Reducers);\n\nconst engine = createEngine(\"my-save-key\");\n\nconst middleware = storage.createMiddleware(engine);\n\nconst createStoreWithMiddleware = applyMiddleware(middleware)(createStore);\n\nexport const Store = createStoreWithMiddleware(reducer);\n\nconst load = storage.createLoader(engine);\n\nload(Store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Login from \"./pages/login/login\";\nimport Todo from \"./pages/todo/todo\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { Store } from \"./store\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact={true} component={Login} />\n          <Route path=\"/Todo\" exact={true} component={Todo} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}